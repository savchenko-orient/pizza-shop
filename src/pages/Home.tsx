import React from "react";
import qs from "qs";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";

import PizzaBlock from "../components/PizzaBlock";
import Categories from "../components/Categiries";
import Sort from "../components/Sort";
import Pagination from "../components/Pagination";

import {
  setCategory,
  setCurrentPage,
  setFilters,
  selectFilter,
} from "../redux/slices/filterSlice";
import { sortCategories } from "../components/Sort";
import {
  fetchPizzas,
  selectPizza,
  SearchPizzaParams,
} from "../redux/slices/pizzaSlice";
import Sceleton from "../components/PizzaBlock/Sceleton";

import { useAppDispatch } from "../redux/store";

const Home: React.FC = () => {
  const categories: string[] = [
    "–í—Å—ñ",
    "–ú'—è—Å–Ω—ñ",
    "–í–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫—ñ",
    "–ì—Ä–∏–ª—å",
    "–ì–æ—Å—Ç—Ä—ñ",
    "–ó–∞–∫—Ä–∏—Ç—ñ",
  ];

  const navigate = useNavigate();
  const dispatch = useAppDispatch();

  const isMounted = React.useRef(false);

  const { category, sort, currentPage, searchValue } =
    useSelector(selectFilter);
  const { items, status } = useSelector(selectPizza);

  const onClickCategory = (index: number) => {
    dispatch(setCategory(index));
  };
  const onChangePage = (page: number) => {
    dispatch(setCurrentPage(page));
  };
  const getPizzas = async () => {
    const sortBy = sort.sortProperty.replace("-", "");
    const order = sort.sortProperty.includes("-") ? "desc" : "asc";
    // asc(ASCending) - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, desc(DESCending) - –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    // const search = searchValue ? `&search=${searchValue}` : "";

    dispatch(
      fetchPizzas({
        sortBy,
        order,
        category: String(category),
        currentPage: String(currentPage),
      })
    );
    window.scrollTo(0, 0);
  };

  // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
  // React.useEffect(() => {
  //   if (isMounted.current) {
  //     const params = {
  //       category,
  //       sortProperty: sort.sortProperty,
  //       currentPage,
  //     };
  //     const queryString = qs.stringify(params, { skipNulls: true });

  //     navigate(`?${queryString}`);
  //   }
  // }, []);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä–± —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã
  React.useEffect(() => {
    getPizzas();
    isMounted.current = true;
  }, [category, sort.sortProperty, currentPage]);

  // // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ REDUX
  // React.useEffect(() => {
  //   if (window.location.search) {
  //     const params = qs.parse(
  //       window.location.search.substring(1)
  //     ) as unknown as SearchPizzaParams;
  //     const sortObj = sortCategories.find(
  //       (obj) => obj.sortProperty === params.sortBy
  //     );

  //     dispatch(
  //       setFilters({
  //         searchValue: searchValue,
  //         category: Number(params.category),
  //         sort: sortObj || sortCategories[0],
  //         currentPage: Number(params.currentPage),
  //       })
  //     );
  //   }
  // }, []);

  const filtredItems = items.filter((item: { title: string }) =>
    item.title.toLowerCase().includes(searchValue.toLowerCase())
  );

  const pizzas = filtredItems.map((obj: any) => {
    return <PizzaBlock key={obj.id} {...obj} />;
  });
  const skeletons = [...new Array(4)].map((_, index) => (
    <Sceleton key={index} />
  ));

  return (
    <div className="container">
      <div className="content__top">
        <Categories
          categories={categories}
          value={category}
          onClickCategory={onClickCategory}
        />
        <Sort />
      </div>
      <h2 className="content__title">{categories[category]}</h2>
      {status === "error" ? (
        <div className="content__error-info">
          <h1>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞üòï</h1>
          <p>
            –ù–∞–∂–∞–ª—å, –Ω–∞–º –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ—Ü–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ.
          </p>
        </div>
      ) : (
        <div className="content__items">
          {status === "loading" ? skeletons : pizzas}
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};
export default Home;
