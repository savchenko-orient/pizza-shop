import React from "react";
import { useSelector } from "react-redux";

import {
  PizzaBlock,
  Categories,
  Sort,
  Pagination,
  Sceleton,
} from "../components";

import { useAppDispatch } from "../redux/store";
import { setCategory, setCurrentPage } from "../redux/filter/slice";
import { selectFilter } from "../redux/filter/selectors";
import { fetchPizzas } from "../redux/pizza/acyncActions";
import { selectPizza } from "../redux/pizza/selectors";

const Home: React.FC = () => {
  const categories: string[] = [
    "–í—Å—ñ",
    "–ú'—è—Å–Ω—ñ",
    "–í–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫—ñ",
    "–ì—Ä–∏–ª—å",
    "–ì–æ—Å—Ç—Ä—ñ",
    "–ó–∞–∫—Ä–∏—Ç—ñ",
  ];

  const dispatch = useAppDispatch();

  const { category, sort, currentPage, searchValue } =
    useSelector(selectFilter);
  const { items, status } = useSelector(selectPizza);

  const onClickCategory = React.useCallback(
    (index: number) => {
      dispatch(setCategory(index));
    },
    [dispatch]
  );

  const onChangePage = (page: number) => {
    dispatch(setCurrentPage(page));
  };

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä–± —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã
  React.useEffect(() => {
    const getPizzas = async () => {
      const sortBy = sort.sortProperty.replace("-", "");
      const order = sort.sortProperty.includes("-") ? "desc" : "asc";
      // asc(ASCending) - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, desc(DESCending) - –ø–æ —É–±—ã–≤–∞–Ω–∏—é
      // const search = searchValue ? `&search=${searchValue}` : "";

      dispatch(
        fetchPizzas({
          sortBy,
          order,
          category: String(category),
          currentPage: String(currentPage),
        })
      );
      window.scrollTo(0, 0);
    };

    getPizzas();
  }, [category, sort.sortProperty, currentPage, dispatch]);

  const filtredItems = items.filter((item: { title: string }) =>
    item.title.toLowerCase().includes(searchValue.toLowerCase())
  );

  const pizzas = filtredItems.map((obj: any) => {
    return <PizzaBlock key={obj.id} {...obj} />;
  });
  const skeletons = [...new Array(4)].map((_, index) => (
    <Sceleton key={index} />
  ));

  return (
    <div className="container">
      <div className="content__top">
        <Categories
          categories={categories}
          value={category}
          onClickCategory={onClickCategory}
        />
        <Sort value={sort} />
      </div>
      <h2 className="content__title">{categories[category]}</h2>
      {status === "error" ? (
        <div className="content__error-info">
          <h1>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞üòï</h1>
          <p>
            –ù–∞–∂–∞–ª—å, –Ω–∞–º –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ—Ü–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ.
          </p>
        </div>
      ) : (
        <div className="content__items">
          {status === "loading" ? skeletons : pizzas}
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};
export default Home;
